import random

L=[10, 3, 7, 5, 9, 7, 8, 0, 8]

def tri_bulles_naif(l):
    for i in range(0,len(l)-1):
        # print (i)
        # print (l)
        for j in range(0,len(l)-1):
            if l[j]>l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]
                # print (l)

# 0
# [10, 3, 7, 5, 9, 7, 8, 0, 8]
# [3, 10, 7, 5, 9, 7, 8, 0, 8]
# [3, 7, 10, 5, 9, 7, 8, 0, 8]
# [3, 7, 5, 10, 9, 7, 8, 0, 8]
# [3, 7, 5, 9, 10, 7, 8, 0, 8]
# [3, 7, 5, 9, 7, 10, 8, 0, 8]
# [3, 7, 5, 9, 7, 8, 10, 0, 8]
# [3, 7, 5, 9, 7, 8, 0, 10, 8]
# [3, 7, 5, 9, 7, 8, 0, 8, 10]
# 1
# [3, 7, 5, 9, 7, 8, 0, 8, 10]
# [3, 5, 7, 9, 7, 8, 0, 8, 10]
# [3, 5, 7, 7, 9, 8, 0, 8, 10]
# [3, 5, 7, 7, 8, 9, 0, 8, 10]
# [3, 5, 7, 7, 8, 0, 9, 8, 10]
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 2
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 3
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# 4
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# 5
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# [3, 0, 5, 7, 7, 8, 8, 9, 10]
# 6
# [3, 0, 5, 7, 7, 8, 8, 9, 10]
# [0, 3, 5, 7, 7, 8, 8, 9, 10]
# 7
# [0, 3, 5, 7, 7, 8, 8, 9, 10]


def tri_bulles(l):
    for i in range(0,len(l)-1):
        for j in range(0,len(l)-i-1):
            if l[j]>l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]



def tri_bulles_final(tableau):
    permutation = True
    passage = 0
    while permutation == True:
        permutation = False
        passage = passage + 1
        for en_cours in range(0, len(tableau) - passage):
            # print (en_cours)
            # print (tableau)
            if tableau[en_cours] > tableau[en_cours + 1]:
                permutation = True
                # On echange les deux elements
                tableau[en_cours], tableau[en_cours + 1] = tableau[en_cours + 1],tableau[en_cours]
                # print (tableau)


# 0
# [10, 3, 7, 5, 9, 7, 8, 0, 8]
# [3, 10, 7, 5, 9, 7, 8, 0, 8]
# 1
# [3, 10, 7, 5, 9, 7, 8, 0, 8]
# [3, 7, 10, 5, 9, 7, 8, 0, 8]
# 2
# [3, 7, 10, 5, 9, 7, 8, 0, 8]
# [3, 7, 5, 10, 9, 7, 8, 0, 8]
# 3
# [3, 7, 5, 10, 9, 7, 8, 0, 8]
# [3, 7, 5, 9, 10, 7, 8, 0, 8]
# 4
# [3, 7, 5, 9, 10, 7, 8, 0, 8]
# [3, 7, 5, 9, 7, 10, 8, 0, 8]
# 5
# [3, 7, 5, 9, 7, 10, 8, 0, 8]
# [3, 7, 5, 9, 7, 8, 10, 0, 8]
# 6
# [3, 7, 5, 9, 7, 8, 10, 0, 8]
# [3, 7, 5, 9, 7, 8, 0, 10, 8]
# 7
# [3, 7, 5, 9, 7, 8, 0, 10, 8]
# [3, 7, 5, 9, 7, 8, 0, 8, 10]
# 0
# [3, 7, 5, 9, 7, 8, 0, 8, 10]
# 1
# [3, 7, 5, 9, 7, 8, 0, 8, 10]
# [3, 5, 7, 9, 7, 8, 0, 8, 10]
# 2
# [3, 5, 7, 9, 7, 8, 0, 8, 10]
# 3
# [3, 5, 7, 9, 7, 8, 0, 8, 10]
# [3, 5, 7, 7, 9, 8, 0, 8, 10]
# 4
# [3, 5, 7, 7, 9, 8, 0, 8, 10]
# [3, 5, 7, 7, 8, 9, 0, 8, 10]
# 5
# [3, 5, 7, 7, 8, 9, 0, 8, 10]
# [3, 5, 7, 7, 8, 0, 9, 8, 10]
# 6
# [3, 5, 7, 7, 8, 0, 9, 8, 10]
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 0
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 1
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 2
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 3
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# 4
# [3, 5, 7, 7, 8, 0, 8, 9, 10]
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 5
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 0
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 1
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 2
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# 3
# [3, 5, 7, 7, 0, 8, 8, 9, 10]
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# 4
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# 0
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# 1
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# 2
# [3, 5, 7, 0, 7, 8, 8, 9, 10]
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# 3
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# 0
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# 1
# [3, 5, 0, 7, 7, 8, 8, 9, 10]
# [3, 0, 5, 7, 7, 8, 8, 9, 10]
# 2
# [3, 0, 5, 7, 7, 8, 8, 9, 10]
# 0
# [3, 0, 5, 7, 7, 8, 8, 9, 10]
# [0, 3, 5, 7, 7, 8, 8, 9, 10]
# 1
# [0, 3, 5, 7, 7, 8, 8, 9, 10]
# 0
# [0, 3, 5, 7, 7, 8, 8, 9, 10]

