\NeedsTeXFormat{LaTeX2e}[1999/01/01]
\ProvidesPackage{bodegraph}[2009/04/06]

\RequirePackage{tikz}
\RequirePackage{ifthen}


\usetikzlibrary{shapes,arrows,backgrounds}

%macros commande sch�ma-blocs

\def\valpi{3.1415957}
\def\valpas{10}
\def\Unitx{}
\def\Unity{}


\newcounter{idGnuplot}

\newcommand{\OrdBode}[1]{\def\valpas{#1}}

\newcommand{\UnitedB}{
\def\Unitx{rad/s}
\def\Unity{dB}
}

\newcommand{\UniteDegre}{
\def\Unitx{rad/s}
\def\Unity{$~^\circ$}
}


\newcommand{\semilog}[5][]{
\pgfmathparse{int(#3-1)}\let\Xmax\pgfmathresult
\foreach \ee in{#2,...,\Xmax}{
    \foreach \x in {1,2,3,4,5,6,7,8,9}{
\draw[dashed, thin, gray!50] ({log10(\x)+\ee},#4) -- ({log10(\x)+\ee},#5);}
\draw[gray!50] (\ee,#4)node[below,black]{\tiny$10^{\ee}$} -- ({\ee},#5);
};
\draw[gray!50] ({#3},#4)node[below,black]{\tiny$10^{#3}$} -- ({#3},#5);
\pgfmathparse{int(#4+\valpas)}
\let\Valsuivante\pgfmathresult 
\foreach \yy in  {#4,\Valsuivante,...,#5}{
\draw[thin,gray!50] (#2,\yy) node[left,black]{\tiny$\yy$} -- ({#3},\yy);};
\node[above , node distance=0.3em,black]at (#2,#5) {\tiny \Unity};
\node[right ,node distance=0.8em,black]at (#3,#4){\tiny \Unitx};
\def\Unitx{}
\def\Unity{}
}
\newcommand{\KAmp}[1]{20*log10(abs(#1))}
\newcommand{\KArg}[1]{0}

\newcommand{\POAmp}[2]{20*log10(abs(#1/sqrt(1+(#2*10**t)**2)))}
\newcommand{\POAmpAsymp}[2]{(t<log10(1/#2)?20*log10(#1):+20*log10(#1/#2)-20*log10(10**t))}
\newcommand{\POArg}[2]{-180/\valpi*atan(#2*10**t)}
\newcommand{\POArgAsymp}[2]{(t<log10(1/#2)? 0:-90)}
\newcommand{\POAmpReel}[2]{20*log10(abs(#1/sqrt(1+(#2*t)**2)))}
\newcommand{\POArgReel}[2]{-180/\valpi*atan(#2*t)}

\newcommand{\SOAmp}[3]{20*log10(abs(#1/sqrt((1-(10**t/#3)**2)**2+(2*#2*(10**t/#3))**2)))}
\newcommand{\SOAmpAsymp}[3]{(t<log10(#3)?20*log10(#1):+20*log10(#1)+40*log10(#3)-40*log10(10**t))}
\newcommand{\SOArg}[3]{180/\valpi*(atan((#3**2-(10**t)**2)/(2*#2*#3*10**t))-\valpi/2)}
\newcommand{\SOArgAsymp}[3]{(t<log10(#3)? 0:-180)}
\newcommand{\SOAmpReel}[3]{20*log10(abs(#1/sqrt((1-(t/#3)**2)**2+(2*#2*(t/#3))**2)))}
\newcommand{\SOArgReel}[3]{180/\valpi*(atan((#3**2-(t)**2)/(2*#2*#3*t))-\valpi/2)}

\newcommand{\IntAmp}[1]{20*log10(abs(#1/(10**t)))}
\newcommand{\IntArg}[1]{-90}

%Retard R(p)=exp(-T*p)
\newcommand{\RetAmp}[1]{0}
\newcommand{\RetArg}[1]{-180/\valpi*#1*10**t}

%Correcteur PI \PIAmp K*(1+Ti*p)/(Ti*p)
\newcommand{\PIAmp}[2]{\IntAmp{1}+20*log10(#1/#2)-\POAmp{1}{#2}}
\newcommand{\PIArg}[2]{\IntArg{1}+(\POArg{#1}{#2})*(-1)}
\newcommand{\PIAmpAsymp}[2]{\IntAmp{1}+20*log10(#1/#2)-\POAmpAsymp{1}{#2}}
\newcommand{\PIArgAsymp}[2]{\IntArg{1}+(\POArgAsymp{#1}{#2})*(-1)}

%Correcteur PID s�rie \PIDAmp K*(1+Ti*p)/(Ti*p)(1+Td*p)
\newcommand{\PIDAmp}[3]{\IntAmp{1}+20*log10(#1/#2)-\POAmp{1}{#2}-\POAmp{1}{#3}}
\newcommand{\PIDArg}[3]{\IntArg{1}-\POArg{#1}{#2}-\POArg{1}{#3} }
\newcommand{\PIDAmpAsymp}[3]{\IntAmp{1}+20*log10(#1/#2)-\POAmpAsymp{1}{#2}-\POAmpAsymp{1}{#3}}
\newcommand{\PIDArgAsymp}[3]{\IntArg{1}-\POArgAsymp{#1}{#2}-\POArgAsymp{1}{#3} }

%Correcteur PD \PDAmp  K*(1+Td*p)
\newcommand{\PDAmp}[2]{20*log10(abs(#1*sqrt(1+(#2*10**t)**2)))}
\newcommand{\PDArg}[2]{-\POArg{(1)}{#2}}
\newcommand{\PDAmpAsymp}[2]{(t<log10(1/#2)?20*log10(#1):+20*log10(#1*#2)+20*log10(10**t))}
\newcommand{\PDArgAsymp}[2]{-\POArgAsymp{(1)}{#2}}

%Correcteur Avance de phase (Retard) C(p)=K(1+a*T1*p)/(1+T1*p)
\newcommand{\APAmp}[3]{\POAmp{#1}{#2}+\PDAmp{1}{(#3*#2)}}
\newcommand{\APArg}[3]{\POArg{#1}{#2}+\PDArg{1}{(#3*#2)}}
\newcommand{\APAmpAsymp}[3]{\POAmpAsymp{#1}{#2}+\PDAmpAsymp{1}{(#3*#2)}}
\newcommand{\APArgAsymp}[3]{\POArgAsymp{#1}{#2}+\PDArgAsymp{1}{(#3*#2)}}

%Correcteur Retard de phase (Retard) C(p)=K(1+T1*p)/(1+b*T1*p)
\newcommand{\RPAmp}[3]{\PDAmp{#1}{#2}+\POAmp{1}{(#3*#2)}}
\newcommand{\RPArg}[3]{\PDArg{#1}{#2}+\POArg{1}{(#3*#2)}}
\newcommand{\RPAmpAsymp}[3]{\PDAmpAsymp{#1}{#2}+\POAmpAsymp{1}{(#3*#2)}}
\newcommand{\RPArgAsymp}[3]{\PDArgAsymp{#1}{#2}+\POArgAsymp{1}{(#3*#2)}}

%Premier ordre g�n�ralis� C(p)=K(a1+a2*p)/(b1+b2*p)
\newcommand{\POgAmp}[5]{\POAmp{(#1*#2/#4)}{(#5/#4)}-\POAmp{1}{(#3/#2)}}
\newcommand{\POgArg}[5]{\POArg{(#1*#2/#4)}{(#5/#4)}-\POArg{1}{(#3/#2)}}
\newcommand{\POgAmpAsymp}[5]{\POAmpAsymp{{#1*#2/#4}}{(#5/#4)}-\POAmpAsymp{1}{{#3/#2}}}
\newcommand{\POgArgAsymp}[5]{\POArgAsymp{(#1*#2/#4)}{(#5/#4)}-\POArgAsymp{1}{(#3/#2)}}



\newcommand{\SOncArg}[4]{
\pgfmathparse{#1/#2}\let\ValK\pgfmathresult
\pgfmathparse{sqrt(#2/#4)}\let\ValW\pgfmathresult
\pgfmathparse{#3/#1*\ValW/2}\let\ValZ\pgfmathresult
\SOArg{\ValK}{\ValZ}{\ValW}}

\newcommand{\SOBlack}[3]{
\SOArg{#1}{#2}{3},\SOAmp{#1}{#2}{3}
}

\newcommand{\POBlack}[2]{
\POArg{#1}{#2},\POAmp{#1}{#2}
}


\def\CorpsPol{\tiny}



\newcommand{\BodeAmp}{\@ifstar\BodeAmpText\BodeAmpNoText}

\newcommand{\BodeAmpNoText}[3][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{log10(10**t),#3};}

\newcommand{\BodeAmpText}[4][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{log10(10**t),#3}node #4;}

\newcommand{\BodeArg}{\@ifstar\BodeArgText\BodeArgNoText}
\newcommand{\BodeArgNoText}[3][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{log10(10**t),#3};}
\newcommand{\BodeArgText}[4][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{log10(10**t),#3}node #4;}


\newcommand{\BlackGraph}{\@ifstar\BlackGraphText\BlackGraphNoText}
\newcommand{\BlackGraphNoText}[3][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50, thick, blue,,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{#3};}
\newcommand{\BlackGraphText}[4][samples=50, thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50, thick, blue,,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{#3}node#4;}


\newcommand{\BlackPoint}{\@ifstar\BlackPointPos\BlackPointNoPos}
\newcommand{\BlackPointNoPos}[3][id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\foreach \W in {#2}{
\pgfmathparse{log10(\W)}
\let\LW\pgfmathresult 
\BlackGraph*[id=\arabic{idGnuplot},prefix=gnuplot/,#1,samples=2,only marks,mark=.]
{\LW:\LW}{#3}{[right]{\CorpsPol \W} node{\tiny \textbullet}}
};
}
\newcommand{\BlackPointPos}[3][id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\foreach \W/\Pos in {#2}{
\pgfmathparse{log10(\W)}
\let\LW\pgfmathresult 
\BlackGraph*[id=\arabic{idGnuplot},prefix=gnuplot/,#1,samples=2,only marks,mark=.]
{\LW:\LW}{#3}{[\Pos]{\CorpsPol \W}node{\tiny \textbullet}}
};
}


\newcommand{\NyquistGraph}{\@ifstar\NyquistGraphText\NyquistGraphNoText}
\newcommand{\NyquistGraphNoText}[4][samples=50, thick, blue,smooth,prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{10**((#3)/20)*cos(\valpi/180*(#4)),10**((#3)/20)*sin(\valpi/180*(#4))};}
\newcommand{\NyquistGraphText}[5][samples=50, thick, blue,smooth,id=nyq,prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot[parametric,] 
function{10**((#3)/20)*cos(\valpi/180*(#4)),10**((#3)/20)*sin(\valpi/180*(#4))}node#5;}

\newcommand{\NyquistPoint}{\@ifstar\NyquistPointPos\NyquistPointNoPos}
\newcommand{\NyquistPointNoPos}[4][id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\foreach \W in {#2}{
\pgfmathparse{log10(\W)}
\let\LW\pgfmathresult 
\NyquistGraph*[id=\arabic{idGnuplot},prefix=gnuplot/,#1,samples=2,only marks,mark=.]
{\LW:\LW}{#3}{#4}{[right]{\CorpsPol \W} node{\tiny \textbullet}}
};
}
\newcommand{\NyquistPointPos}[4][id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\foreach \W/\Pos in {#2}{
\pgfmathparse{log10(\W)}
\let\LW\pgfmathresult 
\NyquistGraph*[id=\arabic{idGnuplot},prefix=gnuplot/,#1,samples=2,only marks,mark=.]
{\LW:\LW}{#3}{#4}{[\Pos]{\CorpsPol \W}node{\tiny \textbullet}}
};
}

\def\valgridNx{1cm}
\def\valgridNy{1cm}



\newcommand{\NyquistGrid}{\@ifstar\NyquistGridStar\NyquistGridNoStar}

\newcommand{\NyquistGridStar}[1][]{
\begin{pgfonlayer}{background}
\draw[xstep=\valgridNx ,ystep=\valgridNy,thin,gray!50,#1] (current bounding box.south west) grid (current
bounding box.north east);
\draw[-latex,black](current bounding box.west|-0,0) --(current bounding box.east|-0,0)--++(0.2,0)node[above]{\small $\mathcal{R}_e$};
\draw[-latex,black](current bounding box.south-|0,0) --(current bounding box.north-|0,0)--++(0,0.2)node[right]{\small $\mathcal{I}_m$};
\end{pgfonlayer}
}
\newcommand{\NyquistGridNoStar}[1][]{
\begin{pgfonlayer}{background}
\node(PointCritique) at (-1,0){};
\draw[dotted,brown!50] (0,0) circle (1);
\draw[xstep=\valgridNx ,ystep=\valgridNy,thin,gray!50,dashed,#1] (current bounding box.south west) grid (current
bounding box.north east);
\draw[-latex,black](current bounding box.west|-0,0) --(current bounding box.east|-0,0)--++(0.2,0)node[above,black]{\small $\mathcal{R}_e$};
\draw[-latex,black](current bounding box.south-|0,0) --(current bounding box.north-|0,0)--++(0,0.2)node[right,black]{\small $\mathcal{I}_m$};
\node(PointCritique) at (-1,0){\tiny \textbullet};
\foreach \xx in {-1,1}
{\node[above,black] at (\xx,0){\tiny \xx};};
\foreach \xx in {-1,0,1}
{\node[above right,black] at (0,\xx){\tiny \xx};};
\end{pgfonlayer}
}



\def\valgridBx{45}
\def\valgridBy{10}
\def\valmaxBf{-180}
\newcommand{\BlackGrid}{\@ifstar\BlackGridStar\BlackGridNoStar}
\newcommand{\BlackGridStar}{
\begin{pgfonlayer}{background}
\draw[-latex,black](current bounding box.west|-0,0) --(current bounding box.east|-0,0)coordinate[name=finaxe,pos=1.01]--(finaxe)node[above,black]{\small $~^\circ$};
\draw[-latex,black](current bounding box.south-|0,0) --(current bounding box.north-|0,0)coordinate[name=finaxe,pos=1.01]--(finaxe)node[right; black]{\small dB};
\draw[xstep=\valgridBx ,ystep=\valgridBy,thin,gray!50,dashed] (current bounding box.south west) grid (current
bounding box.north east);
\end{pgfonlayer}
}
\newcommand{\BlackGridNoStar}{
\begin{pgfonlayer}{background}
\node(PointCritique) at (-180,0){};
\node(Pointzero) at (-0,0){};
\node(Pointmax) at (\valmaxBf,0){};
\draw[xstep=\valgridBx ,ystep=\valgridBy,thin,gray!50,dashed] (current bounding box.south west) grid (current
bounding box.north east);
\draw[-latex,black](current bounding box.west|-0,0) --(current bounding box.east|-0,0)coordinate[name=finaxe,pos=1.05]--(finaxe)node[above,black]{\tiny $0$};
\draw[-latex,black](current bounding box.south-|0,0) --(current bounding box.north-|0,0)coordinate[name=finaxe,pos=1.01]--(finaxe)node[right,black]{\small dB};

\node(PointCritique) at (-180,0){\tiny \textbullet};

\foreach \xx in {0,-\valgridBx,...,\valmaxBf}
{\node[below left,black] at (\xx,0){\tiny \xx};};
\foreach \xx in {-\valgridBy,+\valgridBy}
{\node[right,black] at (0,\xx){\tiny \xx};};
\end{pgfonlayer}
}

\newcommand{\RepTemp}{\@ifstar\RepTempText\RepTempNoText}

\newcommand{\RepTempNoText}[3][samples=50, thick, blue,smooth,id=\arabic{idGnuplot},prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot function{#3};
}
\newcommand{\RepTempText}[4][samples=50, thick, blue,smooth,id=id=,prefix=gnuplot/]{
\stepcounter{idGnuplot}
\draw [samples=50,  thick, blue,id=\arabic{idGnuplot},prefix=gnuplot/,domain=#2,#1] plot function{#3}node #4;
}

\def\valgridx{1}
\def\valmaxx{1}
\def\valgridy{1}
\def\valmaxy{1}
\def\UnitS{s}

\newcommand{\TempGrid}[1][]{
\begin{pgfonlayer}{background}
\node(Pointzero) at (-0,0){};
\draw[xstep=\valgridx ,ystep=\valgridy,thin,brown!50,#1] (current bounding box.south west) grid (current
bounding box.north east);
\draw[-latex](current bounding box.west|-0,0) --(current bounding box.east|-0,0)coordinate[name=finaxe,pos=1.01]--(finaxe)node[above]{\tiny $t$};
\draw[-latex](current bounding box.south-|0,0) --(current bounding box.north-|0,0)node[right]{\tiny \UnitS};
\foreach \xx in {0,\valgridx,...,\valmaxx}
{\node[below,black] at (\xx,0){\tiny \xx};};
\foreach \xx in {0,\valgridy,...,\valmaxy}
{\node[left,black] at (0,\xx){\tiny \xx};};
\end{pgfonlayer}
}



\newcommand{\AbaqueBlack}{
\begin{pgfonlayer}{background}
\IsoModule
\IsoArgument
\end{pgfonlayer}
}

\tikzstyle{styleIsoM}=[smooth,gray!50,ultra thin]
\newcommand{\StyleIsoM}[1][smooth,gray!50,ultra thin]{
\tikzstyle{styleIsoM}=[#1]
}

\tikzstyle{styleIsoA}=[smooth,gray!50,ultra thin]
\newcommand{\StyleIsoA}[1][smooth,gray!50,ultra thin]{
\tikzstyle{styleIsoA}=[#1]
}

\newcommand{\IsoModule}[1][-30,-25,-20,-15,-12,-10,-8,-6,-5,-4,-3,-2,-1,-0.5,-0.2,0,0.2,0.5,1,2,2.3,3,4,5,6,8,10]{
\foreach \dbi in {#1}{
\draw[smooth,gray!50,ultra thin,styleIsoM] plot coordinates {\csname ISOM\dbi \endcsname } node{\tiny $\dbi\mathrm{dB}$};
};
}

\newcommand{\IsoArgument}[1][359,357,354,350,345,340,330,315,300,285,270,255,240,225,210,195,%
190,170,165,150,135,120,105,90,75,60,45,30,20,15,10,6,3,1]{
\foreach \di in {#1}{
\draw[smooth,gray!50,ultra thin,styleIsoA] plot coordinates {\csname ISOA-\di \endcsname } node{\tiny $-\di^\circ$};
};
}


%========================= Courbes de Black================
%les deux fichiers ci dessous contiennent les commandes \ISOMxx et \ISOAxx appel�es dans le trac� des courbes isomodules et isoargument 

%====Iso Module===
\input{isom.txt}

%==== ISo Argument============

\input{isoa.txt}



